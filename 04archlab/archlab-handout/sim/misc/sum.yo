                            | # Execution begins at address 0
0x000:                      |         .pos 0
0x000: 30f40002000000000000 |         irmovq stack, %rsp
0x00a: 804800000000000000   |         call main
0x013: 00                   |         halt 
                            | # Sample linked list 
0x018:                      | .align 8
0x018:                      | ele1: 
0x018: 0a00000000000000     |         .quad 0x00a
0x020: 2800000000000000     |         .quad ele2
0x028:                      | ele2:
0x028: b000000000000000     |         .quad 0x0b0
0x030: 3800000000000000     |         .quad ele3
0x038:                      | ele3:    
0x038: 000c000000000000     |         .quad 0xc00
0x040: 0000000000000000     |         .quad 0
                            | 
                            | # get main
0x048:                      | main:
0x048: 30f71800000000000000 |         irmovq ele1, %rdi
0x052: 805c00000000000000   |         call sum_list       # sum(list_ptr ls)
0x05b: 90                   |         ret
                            | # long sum_list(list_ptr ls)
                            | # start in %rdi
0x05c:                      | sum_list:
0x05c: 6300                 |         xorq %rax,%rax   #rax-->sum_list=0
0x05e: 6277                 |         andq %rdi ,%rdi   # test 
0x060: 708100000000000000   |         jmp test
                            | 
0x069:                      | loop: 
0x069: 50670000000000000000 |         mrmovq (%rdi),%rsi
0x073: 6060                 |         addq %rsi,%rax        
0x075: 50770800000000000000 |         mrmovq 8(%rdi),%rdi  # rdi--->next
0x07f: 6277                 |         andq %rdi,%rdi          # test rdi
0x081:                      | test: 
0x081: 746900000000000000   |         jne loop # rdi==0 ret
0x08a: 90                   |         ret
                            | 
0x200:                      |         .pos 0x200
0x200:                      | stack:
