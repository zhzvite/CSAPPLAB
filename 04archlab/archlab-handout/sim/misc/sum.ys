# Execution begins at address 0
        .pos 0
        irmovq stack, %rsp
        call main
        halt 
# Sample linked list 
.align 8
ele1: 
        .quad 0x00a
        .quad ele2
ele2:
        .quad 0x0b0
        .quad ele3
ele3:    
        .quad 0xc00
        .quad 0

# get main
main:
        irmovq ele1, %rdi
        call sum_list       # sum(list_ptr ls)
        ret
# long sum_list(list_ptr ls)
# start in %rdi
sum_list:
        xorq %rax,%rax   #rax-->sum_list=0
        andq %rdi ,%rdi   # test 
        jmp test

loop: 
        mrmovq (%rdi),%rsi
        addq %rsi,%rax        
        mrmovq 8(%rdi),%rdi  # rdi--->next
        andq %rdi,%rdi          # test rdi
test: 
        jne loop # rdi==0 ret
        ret

        .pos 0x200
stack:
